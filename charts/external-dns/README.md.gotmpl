{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.badgesSection" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.maintainersSection" . }}

{{ template "chart.sourcesSection" . }}

## Installing the Chart

Before you can install the chart you will need to add the `external-dns` repo to [Helm](https://helm.sh/).

```shell
helm repo add external-dns https://kubernetes-sigs.github.io/external-dns/
```

After you've installed the repo you can install the chart.

```shell
helm upgrade --install {{ template "chart.name" . }} external-dns/{{ template "chart.name" . }} --version {{ template "chart.version" . }}
```

## Providers

Configuring the _ExternalDNS_ provider should be done via the `provider.name` value with provider specific configuration being set via the `provider.<name>.<key>` values, where supported, and the `extraArgs` value. For legacy support `provider` can be set to the name of the provider with all additional configuration being set via the `extraArgs` value.
See [documentation](https://kubernetes-sigs.github.io/external-dns/#new-providers) for more info on available providers and tutorials.

### Providers with Specific Configuration Support

| Provider               | Supported  |
|------------------------|------------|
| `webhook`              | ✅         |

### Other Providers

For set up for a specific provider using the Helm chart, see the following links:

- [AWS](https://github.com/kubernetes-sigs/external-dns/blob/master/docs/tutorials/aws.md#using-helm-with-oidc)
- [akamai-edgedns](https://github.com/kubernetes-sigs/external-dns/blob/master/docs/tutorials/akamai-edgedns.md#using-helm)
- [cloudflare](https://github.com/kubernetes-sigs/external-dns/blob/master/docs/tutorials/cloudflare.md#using-helm)
- [digitalocean](https://github.com/kubernetes-sigs/external-dns/blob/master/docs/tutorials/digitalocean.md#using-helm)
- [godaddy](https://github.com/kubernetes-sigs/external-dns/blob/master/docs/tutorials/godaddy.md#using-helm)
- [ns1](https://github.com/kubernetes-sigs/external-dns/blob/master/docs/tutorials/ns1.md#using-helm)
- [plural](https://github.com/kubernetes-sigs/external-dns/blob/master/docs/tutorials/plural.md#using-helm)
- [vultr](https://github.com/kubernetes-sigs/external-dns/blob/master/docs/tutorials/vultr.md#using-helm)

## Namespaced Scoped Installation

external-dns supports running on a namespaced only scope, too.
If `namespaced=true` is defined, the helm chart will setup `Roles` and `RoleBindings` instead `ClusterRoles` and `ClusterRoleBindings`.

### Limited Supported

Not all sources are supported in namespaced scope, since some sources depends on cluster-wide resources.
For example: Source `node` isn't supported, since `kind: Node` has scope `Cluster`.
Sources like `istio-virtualservice` only work, if all resources like `Gateway` and `VirtualService` are present in the same
namespaces as `external-dns`.

The annotation `external-dns.alpha.kubernetes.io/endpoints-type: NodeExternalIP` is not supported.

If `namespaced` is set to `true`, please ensure that `sources` my only contains supported sources (Default: `service,ingress`).

### Support Matrix

| Source                 | Supported  | Infos                  |
|------------------------|------------|------------------------|
| `ingress`              | ✅         |                        |
| `istio-gateway`        | ✅         |                        |
| `istio-virtualservice` | ✅         |                        |
| `crd`                  | ✅         |                        |
| `kong-tcpingress`      | ✅         |                        |
| `openshift-route`      | ✅         |                        |
| `skipper-routegroup`   | ✅         |                        |
| `gloo-proxy`           | ✅         |                        |
| `contour-httpproxy`    | ✅         |                        |
| `service`              | ⚠️️         | NodePort not supported |
| `node`                 | ❌         |                        |
| `pod`                  | ❌         |                        |

## Global mode

`global.mode` can be used to deploy external-dns controller in a management cluster and serviceAccount and RBAC in a workload cluster.

Usage:

- Create `values-workload-cluster1.yaml`:

  ```yaml
  # values-workload-cluster1.yaml
  global:
    mode: workload
  ```

- Create `values-mgmt-cluster1.yaml`:

  ```yaml
  # values-mgmt-cluster1.yaml
  global:
    mode: management

  env:
  - name: KUBERNETES_SERVICE_HOST
    valueFrom:
      configMapKeyRef:
        name: kubernetes-service
        key: KUBERNETES_SERVICE_HOST
  - name: KUBERNETES_SERVICE_PORT
    valueFrom:
      configMapKeyRef:
        name: kubernetes-service
        key: KUBERNETES_SERVICE_PORT
  - name: namespace
    valueFrom:
      configMapKeyRef:
        name: kubernetes-service
        key: namespace

  extraVolumeMounts:
  - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
    name: kube-api-access
    readOnly: true
  extraVolumes:
  - name: kube-api-access
    secret:
      secretName: kube-api-access
  ```

- install on the workload cluster:

```console
$ export KUBECONFIG=cluster1.kubeconfig
$ kubectl create namespace external-dns
namespace/external-dns created
$ helm upgrade --install external-dns external-dns/external-dns \
  --namespace external-dns \
  --values values-workload-cluster1.yaml
NAME: external-dns
LAST DEPLOYED: Wed May 28 15:46:42 2024
NAMESPACE: external-dns
STATUS: deployed
REVISION: 1
TEST SUITE: None
```

- install on the management cluster:

  ```console
  $ export KUBECONFIG=mgmt.kubeconfig
  $ kubectl create namespace external-dns-cluster1
  namespace/external-dns-cluster1 created
  $ helm upgrade --install external-dns-cluster1 external-dns/external-dns \
    --namespace external-dns-cluster1 \
    --values values-mgmt-cluster1.yaml
  NAME: external-dns-cluster1
  LAST DEPLOYED: Wed Sep 28 15:50:22 2022
  NAMESPACE: external-dns-cluster1
  STATUS: deployed
  REVISION: 1
  TEST SUITE: None
  ```

- Create `KUBECONFIG`:

  ```console
  $ export KUBECONFIG=cluster1.kubeconfig
  $ ca_crt="$(kubectl get secret -n external-dns external-dns -ojsonpath={.data.'ca\.crt'} | base64 -d)"
  $ token="$(kubectl get secret -n external-dns external-dns -ojsonpath={.data.token} | base64 -d)"
  $ host_port="$(kubectl config view -ojson | jq .clusters[0].cluster.server -r | cut -d / -f3)"
  $ KUBERNETES_SERVICE_HOST="$(echo "$host_port" | cut -d: -f1)"
  $ KUBERNETES_SERVICE_PORT="$(echo "$host_port" | cut -d: -f2)"

  $ export KUBECONFIG=cluster1.kubeconfig
  $ kubectl create secret -n external-dns-cluster1 generic kube-api-access \
      --from-literal="token=$token" \
      --from-literal="ca.crt=$ca_crt" \
      --from-literal="namespace=external-dns"
  $ kubectl create configmap -n external-dns-cluster1 kubernetes-service \
      --from-literal="KUBERNETES_SERVICE_HOST=$KUBERNETES_SERVICE_HOST" \
      --from-literal="KUBERNETES_SERVICE_PORT=$KUBERNETES_SERVICE_PORT" \
      --from-literal="namespace=external-dns"
  ```


{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}

----------------------------------------------

Autogenerated from chart metadata using [helm-docs](https://github.com/norwoodj/helm-docs/).
