name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

permissions:
  contents: read  #  to fetch code (actions/checkout)

jobs:

  test:
    permissions:
      contents: read  #  to fetch code (actions/checkout)
      checks: write  #  to create a new check based on the results (shogo82148/actions-goveralls)

    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # tests for target OS
        os: [ubuntu-latest, macos-latest]
    steps:

    - name: Check out code into the Go module directory
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

    - name: Set up Go 1.x
      uses: actions/setup-go@v6
      with:
        go-version-file: go.mod
        check-latest: true
      id: go

    - name: Install Dependencies
      run: |
        go get -v -t -d ./...

    - name: Test
      env:
        GOMAXPROCS: 4
        GOMEMLIMIT: 8192MiB
      run: make go-test

    - name: Send coverage
      uses: coverallsapp/github-action@v2
      with:
        file: profile.cov
        format: golang
        flag-name: run-${{ join(matrix.*, '-') }}
        parallel: true
      continue-on-error: true

  finish:
    needs: test
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls Finished
      uses: coverallsapp/github-action@v2
      with:
        parallel-finished: true
        carryforward: "run-ubuntu-latest,run-macos-latest"
